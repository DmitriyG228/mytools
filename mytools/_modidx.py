# Autogenerated by nbdev

d = { 'settings': { 'branch': '{branch}',
                'doc_baseurl': '/mytools/',
                'doc_host': 'https://{user}.github.io',
                'git_url': 'https://github.com/{user}/mytools/tree/{branch}/',
                'lib_path': 'mytools'},
  'syms': { 'mytools.chatgpt': { 'mytools.chatgpt._ask_chatgpt': ('chatgptfuncs.html#_ask_chatgpt', 'mytools/chatgpt.py'),
                                 'mytools.chatgpt.ask_chatgpt': ('chatgptfuncs.html#ask_chatgpt', 'mytools/chatgpt.py'),
                                 'mytools.chatgpt.ask_chatgpt_stream': ('chatgptfuncs.html#ask_chatgpt_stream', 'mytools/chatgpt.py'),
                                 'mytools.chatgpt.ask_chatgpt_stream_async': ( 'chatgptfuncs.html#ask_chatgpt_stream_async',
                                                                               'mytools/chatgpt.py'),
                                 'mytools.chatgpt.chat': ('chatgptfuncs.html#chat', 'mytools/chatgpt.py'),
                                 'mytools.chatgpt.crop_tokens': ('chatgptfuncs.html#crop_tokens', 'mytools/chatgpt.py'),
                                 'mytools.chatgpt.prompt': ('chatgptfuncs.html#prompt', 'mytools/chatgpt.py'),
                                 'mytools.chatgpt.strip_text': ('chatgptfuncs.html#strip_text', 'mytools/chatgpt.py')},
            'mytools.custom_pandas': { 'mytools.custom_pandas.read_sql_query': ( 'custom_pandas.html#read_sql_query',
                                                                                 'mytools/custom_pandas.py')},
            'mytools.onehot': { 'mytools.onehot.OneHot': ('onehot.html#onehot', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.__init__': ('onehot.html#__init__', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.apply': ('onehot.html#apply', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.apply_bins': ('onehot.html#apply_bins', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.apply_multiple_columns': ('onehot.html#apply_multiple_columns', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.build_milvus_query': ('onehot.html#build_milvus_query', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.from_df': ('onehot.html#from_df', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.from_file': ('onehot.html#from_file', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.n_dim': ('onehot.html#n_dim', 'mytools/onehot.py'),
                                'mytools.onehot.OneHot.to_file': ('onehot.html#to_file', 'mytools/onehot.py')},
            'mytools.paths': {},
            'mytools.psql': { 'mytools.psql.current': ('psql.html#current', 'mytools/psql.py'),
                              'mytools.psql.docker_run_psql': ('psql.html#docker_run_psql', 'mytools/psql.py'),
                              'mytools.psql.dtypes': ('psql.html#dtypes', 'mytools/psql.py'),
                              'mytools.psql.du': ('psql.html#du', 'mytools/psql.py'),
                              'mytools.psql.get_constraints': ('psql.html#get_constraints', 'mytools/psql.py'),
                              'mytools.psql.insert_on_conflict': ('psql.html#insert_on_conflict', 'mytools/psql.py'),
                              'mytools.psql.kill': ('psql.html#kill', 'mytools/psql.py'),
                              'mytools.psql.pgdump': ('psql.html#pgdump', 'mytools/psql.py'),
                              'mytools.psql.pgrestore': ('psql.html#pgrestore', 'mytools/psql.py'),
                              'mytools.psql.read_sql': ('psql.html#read_sql', 'mytools/psql.py')},
            'mytools.tools': { 'mytools.tools.LogDBHandler': ('tools.html#logdbhandler', 'mytools/tools.py'),
                               'mytools.tools.LogDBHandler.__init__': ('tools.html#__init__', 'mytools/tools.py'),
                               'mytools.tools.LogDBHandler.emit': ('tools.html#emit', 'mytools/tools.py'),
                               'mytools.tools.append_csv': ('tools.html#append_csv', 'mytools/tools.py'),
                               'mytools.tools.compound_return': ('tools.html#compound_return', 'mytools/tools.py'),
                               'mytools.tools.copy_func': ('tools.html#copy_func', 'mytools/tools.py'),
                               'mytools.tools.df_chunk_generator': ('tools.html#df_chunk_generator', 'mytools/tools.py'),
                               'mytools.tools.docker_container': ('tools.html#docker_container', 'mytools/tools.py'),
                               'mytools.tools.from_pickle': ('tools.html#from_pickle', 'mytools/tools.py'),
                               'mytools.tools.get_api_key': ('tools.html#get_api_key', 'mytools/tools.py'),
                               'mytools.tools.get_env': ('tools.html#get_env', 'mytools/tools.py'),
                               'mytools.tools.get_hash_folder': ('tools.html#get_hash_folder', 'mytools/tools.py'),
                               'mytools.tools.get_image': ('tools.html#get_image', 'mytools/tools.py'),
                               'mytools.tools.get_image_from_url': ('tools.html#get_image_from_url', 'mytools/tools.py'),
                               'mytools.tools.get_logger': ('tools.html#get_logger', 'mytools/tools.py'),
                               'mytools.tools.get_proxies': ('tools.html#get_proxies', 'mytools/tools.py'),
                               'mytools.tools.get_top_n_countries': ('tools.html#get_top_n_countries', 'mytools/tools.py'),
                               'mytools.tools.htop': ('tools.html#htop', 'mytools/tools.py'),
                               'mytools.tools.inline': ('tools.html#inline', 'mytools/tools.py'),
                               'mytools.tools.kill': ('tools.html#kill', 'mytools/tools.py'),
                               'mytools.tools.ls': ('tools.html#ls', 'mytools/tools.py'),
                               'mytools.tools.make_clickable': ('tools.html#make_clickable', 'mytools/tools.py'),
                               'mytools.tools.patch': ('tools.html#patch', 'mytools/tools.py'),
                               'mytools.tools.patch_to': ('tools.html#patch_to', 'mytools/tools.py'),
                               'mytools.tools.path_info': ('tools.html#path_info', 'mytools/tools.py'),
                               'mytools.tools.pd_highlight': ('tools.html#pd_highlight', 'mytools/tools.py'),
                               'mytools.tools.pd_set_float': ('tools.html#pd_set_float', 'mytools/tools.py'),
                               'mytools.tools.pdrows': ('tools.html#pdrows', 'mytools/tools.py'),
                               'mytools.tools.plot_map': ('tools.html#plot_map', 'mytools/tools.py'),
                               'mytools.tools.plot_multiple_y': ('tools.html#plot_multiple_y', 'mytools/tools.py'),
                               'mytools.tools.read_image_from_url': ('tools.html#read_image_from_url', 'mytools/tools.py'),
                               'mytools.tools.repeat_df': ('tools.html#repeat_df', 'mytools/tools.py'),
                               'mytools.tools.rm_r': ('tools.html#rm_r', 'mytools/tools.py'),
                               'mytools.tools.save_location_dicts': ('tools.html#save_location_dicts', 'mytools/tools.py'),
                               'mytools.tools.save_selected_cities': ('tools.html#save_selected_cities', 'mytools/tools.py'),
                               'mytools.tools.save_str2file': ('tools.html#save_str2file', 'mytools/tools.py'),
                               'mytools.tools.search_notebooks': ('tools.html#search_notebooks', 'mytools/tools.py'),
                               'mytools.tools.sql_head': ('tools.html#sql_head', 'mytools/tools.py'),
                               'mytools.tools.startEndTimestamp': ('tools.html#startendtimestamp', 'mytools/tools.py'),
                               'mytools.tools.telegram': ('tools.html#telegram', 'mytools/tools.py'),
                               'mytools.tools.timestamp2int': ('tools.html#timestamp2int', 'mytools/tools.py'),
                               'mytools.tools.to_pickle': ('tools.html#to_pickle', 'mytools/tools.py'),
                               'mytools.tools.to_sql': ('tools.html#to_sql', 'mytools/tools.py')},
            'mytools.visual': { 'mytools.visual.apply_mask': ('visual.html#apply_mask', 'mytools/visual.py'),
                                'mytools.visual.crop_center_arr': ('visual.html#crop_center_arr', 'mytools/visual.py'),
                                'mytools.visual.crop_image_to_square': ('visual.html#crop_image_to_square', 'mytools/visual.py'),
                                'mytools.visual.crop_zeros': ('visual.html#crop_zeros', 'mytools/visual.py'),
                                'mytools.visual.expand_boundaries': ('visual.html#expand_boundaries', 'mytools/visual.py'),
                                'mytools.visual.extrapolate': ('visual.html#extrapolate', 'mytools/visual.py'),
                                'mytools.visual.get_image_clip': ('visual.html#get_image_clip', 'mytools/visual.py'),
                                'mytools.visual.get_image_clip_from_paths': ('visual.html#get_image_clip_from_paths', 'mytools/visual.py'),
                                'mytools.visual.get_text_clip': ('visual.html#get_text_clip', 'mytools/visual.py'),
                                'mytools.visual.mean_filter': ('visual.html#mean_filter', 'mytools/visual.py'),
                                'mytools.visual.norm': ('visual.html#norm', 'mytools/visual.py'),
                                'mytools.visual.search_clip': ('visual.html#search_clip', 'mytools/visual.py'),
                                'mytools.visual.select_cuda': ('visual.html#select_cuda', 'mytools/visual.py'),
                                'mytools.visual.visualize_array': ('visual.html#visualize_array', 'mytools/visual.py')}}}